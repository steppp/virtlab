.\"* libvdeplug: a network namespace as a user library
.\" Copyright (C) 2018 Michele Nalli. University of Bologna. <michele.nalli@studio.unibo.it>
.\"
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public
.\" License as published by the Free Software Foundation; either
.\" version 2.1 of the License, or (at your option) any later version.
.\"
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\"
.\" You should have received a copy of the GNU Lesser General Public
.\" License along with this library; if not, write to the Free Software
.\" Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

.TH LIBVDEPLUG_AGNO 1 "April 30, 2017" "Virtual Distributed Ethernet"

.SH NAME
libvdeplug_agno \- vdeplug module: add encryption to ethernet link plug
.SH SYNOPSIS
libvdeplug_agno.so
.SH DESCRIPTION
This is a libvdeplug cryptographic module that implements agnostic encryption
over layer 2.
Agnostic encryption is an encryption method that doesn't need information about
the lenght of the ip packet.

This module of libvdeplug4 can be used in any program supporting vde, like
\fBvde_plug\fR, \fBkvm\fR, \fBqemu\fR, \fBuser-mode-linux\fR and \fBvirtualbox\fR.

The vde_plug_url syntax of this module is the following:
.RS
.B agno://{\fIvde nested url\fP}
.br
.B agno://\fR[/path/to/keyfile]\fB[\fI[OPTION]\fP]{\fIvde nested url\fP}
.br
.RE

\fI/path/to/keyfile\fR if present, it must be an absolute path or a path relative
to the user's home (~/example/path).
If omitted the path of the keyfile is ~/.vde_agno_key.
The keyfile must contain a 128-bit key in hexadecimal format.
Only hexadecimal caracters are considered in both uppercase and lowercase, all
the others are ignored (e.g. whitespaces, newline characters, non-hexadecimal letters).
.SH OPTIONS
.TP
\fBethtype=\fR\fITYPE
define the type of the Ethernet frame of the encrypted packet.
\fITYPE\fR can be the number that specifies the bytes of the type.

\fITYPE\fR can be also be a string value such as copy, ipv4, ipv6, rand.
.RS
.B \fIcopy\fR: same type of the non-encrypted packet.
.br
.B \fIipv4\fR: ipv4 type (0x0800).
.br
.B \fIipv6\fR: ipv6 type (0x86dd).
.br
.B \fIrand\fR: random number as type. The random number will be generated for
every Ethernet packet sent.
.RE
.SH EXAMPLES
.B vde_plug agno://{vde:///tmp/myswitch}
.br
agno uses the key stored in the default keyfile (~/.vde_agno_key) location to
encrypt the traffic sent to the switch. The Ethernet frames will have agno
specific type (0xa6de) as type.
.br
.B vde_plug agno:///tmp/my_keyfile[ethtype=copy]{vde:///tmp/myswitch}
.br
agno uses the key stored in file /tmp/my_keyfile to encrypt the traffic sent to
the switch. The Ethernet frames will have the same type of the non-encrypted packet.
(0xa6de) as type.
.br
.B agno://[ethtype=rand]{vxvde://234.0.0.1}
.br
agno uses the key stored in the default keyfile (~/.vde_agno_key) location to
encrypt the traffic sent to vxvde. Packets sent will have tag.
.SH NOTICE
Virtual Distributed Ethernet is not related in any way with
www.vde.com ("Verband der Elektrotechnik, Elektronik und Informationstechnik"
i.e. the German "Association for Electrical, Electronic & Information
Technologies").
.SH SEE ALSO
\fBvde_plug\fP(1).
.SH BUGS
Bug reports should be addressed to <info@virtualsquare.org>
.SH AUTHOR
Renzo Davoli <renzo@cs.unibo.it>
